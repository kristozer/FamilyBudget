// <auto-generated />
using System;
using FamilyBudget.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FamilyBudget.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2");

            modelBuilder.Entity("FamilyBudget.Domain.Entities.Expenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("FinancialPeriodId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlannedExpenditureId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PlannedToSpendValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SpentValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FinancialPeriodId");

                    b.HasIndex("PlannedExpenditureId")
                        .IsUnique();

                    b.ToTable("Expenditures", (string)null);
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.FinancialPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodBegin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PeriodEnd")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FinancialPeriods");
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("FinancialPeriodId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FinancialPeriodId");

                    b.ToTable("Incomes", (string)null);
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.PlannedExpenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Period")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlannedExpenditures", (string)null);
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.Expenditure", b =>
                {
                    b.HasOne("FamilyBudget.Domain.Entities.FinancialPeriod", "FinancialPeriod")
                        .WithMany("Expenditures")
                        .HasForeignKey("FinancialPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyBudget.Domain.Entities.PlannedExpenditure", "PlannedExpenditure")
                        .WithOne("Expenditure")
                        .HasForeignKey("FamilyBudget.Domain.Entities.Expenditure", "PlannedExpenditureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("FinancialPeriod");

                    b.Navigation("PlannedExpenditure");
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.Income", b =>
                {
                    b.HasOne("FamilyBudget.Domain.Entities.FinancialPeriod", "FinancialPeriod")
                        .WithMany("Incomes")
                        .HasForeignKey("FinancialPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialPeriod");
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.FinancialPeriod", b =>
                {
                    b.Navigation("Expenditures");

                    b.Navigation("Incomes");
                });

            modelBuilder.Entity("FamilyBudget.Domain.Entities.PlannedExpenditure", b =>
                {
                    b.Navigation("Expenditure")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
